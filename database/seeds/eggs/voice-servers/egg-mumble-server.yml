# DO NOT EDIT: FILE GENERATED AUTOMATICALLY BY PTERODACTYL PANEL - PTERODACTYL.IO
meta:
  version: PTDL_v2
  update_url: null
  exported_at: '2020-12-31T09:45:17-08:00'
name: 'Mumble Server'
author: support@pterodactyl.io
description: 'Mumble is an open source, low-latency, high quality voice chat software primarily intended for use while gaming.'
features: null
images:
  - 'quay.io/pterodactyl/core:glibc'
startup: './murmur.x86 -fg'
config:
  files:
    murmur.ini:
      parser: ini
      find:
        logfile: murmur.log
        port: '{{server.build.default.port}}'
        host: 0.0.0.0
        users: '{{server.build.env.MAX_USERS}}'
  startup:
    done: 'Server listening on'
    userInteraction:
      - 'Generating new server certificate'
  logs:
    custom: true
    location: logs/murmur.log
  stop: ^C
scripts:
  installation:
    script: |
      #!/bin/bash
      # Mumble Installation Script
      #
      # Server Files: /mnt/server
      GITHUB_PACKAGE=mumble-voip/mumble
      MATCH=murmur-static
      
      apt update
      apt install -y tar curl jq bzip2
      
      if [ ! -d /mnt/server/ ]; then
          mkdir /mnt/server/
      fi
      
      cd /mnt/server
      
      if [ -z "${GITHUB_USER}" ] && [ -z "${GITHUB_OAUTH_TOKEN}" ] ; then
          echo -e "using anon api call"
      else
          echo -e "user and oauth token set"
          alias curl='curl -u ${GITHUB_USER}:${GITHUB_OAUTH_TOKEN} '
      fi
      
      ## get release info and download links
      LATEST_JSON=$(curl --silent "https://api.github.com/repos/${GITHUB_PACKAGE}/releases/latest")
      RELEASES=$(curl --silent "https://api.github.com/repos/${GITHUB_PACKAGE}/releases")
      
      if [ -z "${VERSION}" ] || [ "${VERSION}" == "latest" ]; then
          DOWNLOAD_LINK=$(echo ${LATEST_JSON} | jq .assets | jq -r .[].browser_download_url | grep -m 1 -i ${MATCH})
      else
          VERSION_CHECK=$(echo ${RELEASES} | jq -r --arg VERSION "${VERSION}" '.[] | select(.tag_name==$VERSION) | .tag_name')
          if [ "${VERSION}" == "${VERSION_CHECK}" ]; then
              DOWNLOAD_LINK=$(echo ${RELEASES} | jq -r --arg VERSION "${VERSION}" '.[] | select(.tag_name==$VERSION) | .assets[].browser_download_url' | grep -m 1 -i ${MATCH})
          else
              echo -e "defaulting to latest release"
              DOWNLOAD_LINK=$(echo ${LATEST_JSON} | jq .assets | jq -r .[].browser_download_url)
          fi
      fi
      
      curl -L ${DOWNLOAD_LINK} | tar xjv --strip-components=1
    container: 'debian:buster-slim'
    entrypoint: bash
variables:
  -
    name: 'Maximum Users'
    description: 'Maximum concurrent users on the mumble server.'
    env_variable: MAX_USERS
    default_value: '100'
    user_viewable: true
    user_editable: false
    rules: 'required|numeric|digits_between:1,5'
  -
    name: 'Server Version'
    description: 'Version of Mumble Server to download and use.'
    env_variable: MUMBLE_VERSION
    default_value: latest
    user_viewable: true
    user_editable: true
    rules: 'required|regex:/^([0-9_\.-]{5,8})$/'
