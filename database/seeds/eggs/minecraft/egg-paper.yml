# DO NOT EDIT: FILE GENERATED AUTOMATICALLY BY PTERODACTYL PANEL - PTERODACTYL.IO
meta:
  version: PTDL_v2
  update_url: null
  exported_at: '2020-12-31T09:43:43-08:00'
name: Paper
author: parker@pterodactyl.io
description: 'High performance Spigot fork that aims to fix gameplay and mechanics inconsistencies.'
features:
  - eula
images:
  - 'quay.io/pterodactyl/core:java-11'
startup: 'java -Xms128M -Xmx{{SERVER_MEMORY}}M -Dterminal.jline=false -Dterminal.ansi=true -jar {{SERVER_JARFILE}}'
config:
  files:
    server.properties:
      parser: properties
      find:
        server-ip: 0.0.0.0
        server-port: '{{server.build.default.port}}'
  startup:
    done: ')! For help, type '
    userInteraction:
      - 'Go to eula.txt for more info.'
  logs: {  }
  stop: stop
scripts:
  installation:
    script: |
      #!/bin/bash
      # Paper Installation Script
      #
      # Server Files: /mnt/server
      PROJECT=paper
      
      apt update
      apt install -y curl jq
      
      if [ -n "${DL_PATH}" ]; then
      	echo -e "Using supplied download url: ${DL_PATH}"
      	DOWNLOAD_URL=`eval echo $(echo ${DL_PATH} | sed -e 's/{{/${/g' -e 's/}}/}/g')`
      else
      	VER_EXISTS=`curl -s https://papermc.io/api/v2/projects/${PROJECT} | jq -r --arg VERSION $MINECRAFT_VERSION '.versions[] | contains($VERSION)' | grep true`
      	LATEST_VERSION=`curl -s https://papermc.io/api/v2/projects/${PROJECT} | jq -r '.versions' | jq -r '.[-1]'`
      
      	if [ "${VER_EXISTS}" == "true" ]; then
      		echo -e "Version is valid. Using version ${MINECRAFT_VERSION}"
      	else
      		echo -e "Using the latest ${PROJECT} version"
      		MINECRAFT_VERSION=${LATEST_VERSION}
      	fi
      	
      	BUILD_EXISTS=`curl -s https://papermc.io/api/v2/projects/${PROJECT}/versions/${MINECRAFT_VERSION} | jq -r --arg BUILD ${BUILD_NUMBER} '.builds[] | tostring | contains($BUILD)' | grep true`
      	LATEST_BUILD=`curl -s https://papermc.io/api/v2/projects/${PROJECT}/versions/${MINECRAFT_VERSION} | jq -r '.builds' | jq -r '.[-1]'`
      	
      	if [ "${BUILD_EXISTS}" == "true" ]; then
      		echo -e "Build is valid for version ${MINECRAFT_VERSION}. Using build ${BUILD_NUMBER}"
      	else
      		echo -e "Using the latest ${PROJECT} build for version ${MINECRAFT_VERSION}"
      		BUILD_NUMBER=${LATEST_BUILD}
      	fi
      	
      	JAR_NAME=${PROJECT}-${MINECRAFT_VERSION}-${BUILD_NUMBER}.jar
      	
      	echo "Version being downloaded"
      	echo -e "MC Version: ${MINECRAFT_VERSION}"
      	echo -e "Build: ${BUILD_NUMBER}"
      	echo -e "JAR Name of Build: ${JAR_NAME}"
      	DOWNLOAD_URL=https://papermc.io/api/v2/projects/${PROJECT}/versions/${MINECRAFT_VERSION}/builds/${BUILD_NUMBER}/downloads/${JAR_NAME}
      fi
      
      cd /mnt/server
      
      echo -e "Running curl -o ${SERVER_JARFILE} ${DOWNLOAD_URL}"
      
      if [ -f ${SERVER_JARFILE} ]; then
      	mv ${SERVER_JARFILE} ${SERVER_JARFILE}.old
      fi
      
      curl -o ${SERVER_JARFILE} ${DOWNLOAD_URL}
      
      if [ ! -f server.properties ]; then
          echo -e "Downloading MC server.properties"
          curl -o server.properties https://raw.githubusercontent.com/parkervcp/eggs/master/minecraft/java/server.properties
      fi
    container: 'debian:buster-slim'
    entrypoint: bash
variables:
  -
    name: 'Minecraft Version'
    description: |
      The version of minecraft to download. 
      
      Leave at latest to always get the latest version. Invalid versions will default to latest.
    env_variable: MINECRAFT_VERSION
    default_value: latest
    user_viewable: true
    user_editable: false
    rules: 'nullable|string|max:20'
  -
    name: 'Server Jar File'
    description: 'The name of the server jarfile to run the server with.'
    env_variable: SERVER_JARFILE
    default_value: server.jar
    user_viewable: true
    user_editable: true
    rules: 'required|string|max:20'
  -
    name: 'Download Path'
    description: 'A URL to use to download a server.jar rather than the ones in the install script. This is not user viewable.'
    env_variable: DL_PATH
    default_value: ''
    user_viewable: false
    user_editable: false
    rules: nullable|string
  -
    name: 'Build Number'
    description: |
      The build number for the paper release.
      
      Leave at latest to always get the latest version. Invalid versions will default to latest.
    env_variable: BUILD_NUMBER
    default_value: latest
    user_viewable: true
    user_editable: false
    rules: 'required|string|max:20'
